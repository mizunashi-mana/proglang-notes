digraph {
  graph [
    charset = "UTF-8";
  ];

  node [
    shape = box;
  ];

  start;
  end;
  accepted;
  reduced;

  start -> node1_enter_joint [
    label = "(-): enter into E",
    arrowhead = "none"
  ];

  end -> accepted [
    label = "(^Z): accept"
  ];

  node1_enter_joint [
    shape = "none",
    label = "",
    width = 0,
    height = 0
  ];

  node1_enter_joint -> node1;
  node1_enter_joint -> end [
    style = "dotted"
  ];

  node1 [
    label = "E <- . C A"
  ];

  node1 -> node2_joint [
    label = "(-): with backpoint",
    arrowhead = "none"
  ];

  node2_joint [
    shape = "none",
    label = "",
    width = 0,
    height = 0
  ];

  node2_joint -> node2_enter_joint [
    label = "enter into C",
    arrowhead = "none"
  ];

  node2_enter_joint [
    shape = "none",
    label = "",
    width = 0,
    height = 0
  ];

  node2_enter_joint -> node2;

  node2_enter_joint -> node12 [
    style = "dotted"
  ];

  node2_joint -> node10 [
    label = "(a): shift",
    style = "dashed"
  ];

  node2 [
    label = "C <- ; . ! a b a b"
  ];

  node2 -> node3_joint [
    label = "(a): with backpoint",
    arrowhead = "none"
  ];

  node2 -> reduced [
    label = "(-): reduce"
  ];

  node3_joint [
    shape = "none",
    label = "",
    width = 0,
    height = 0
  ];

  node3_joint -> node4 [
    label = "shift"
  ];

  node3_joint -> reduced [
    label = "(-): reduce",
    style = "dashed"
  ];

  node4 [
    label = "C <- ; ! ; a . b a b"
  ];

  node4 -> node5 [
    label = "(b): shift"
  ];

  node5 [
    label = "C <- ; ! ; a b . a b"
  ];

  node5 -> node6 [
    label = "(a): shift"
  ];

  node6 [
    label = "C <- ; ! ; a b a . b"
  ];

  node6 -> node7 [
    label = "(b): shift"
  ];

  node7 [
    label = "C <- ; ! ; a b a b ."
  ];

  node7 -> reduced [
    label = "(-): reduce"
  ];

  node10 [
    label = "C <- \& a . b"
  ];

  node10 -> node11 [
    label = "(b): shift"
  ];

  node11 [
    label = "C <- \& a b ."
  ];

  node11 -> reduced [
    label = "(-): reduce"
  ];

  node12 [
    label = "E <- C . A";
  ];

  node12 -> node13_joint [
    label = "(a): with backpoint",
    arrowhead = "none"
  ];

  node13_joint [
    shape = "none",
    label = "",
    width = 0,
    height = 0
  ];

  node13_joint -> node13_enter_joint [
    label = "enter into A",
    arrowhead = "none"
  ];

  node13_joint -> node18 [
    label = "(a): shift",
    style = "dashed"
  ];

  node13_enter_joint [
    shape = "none",
    label = "",
    width = 0,
    height = 0
  ];

  node13_enter_joint -> node13;

  node13_enter_joint -> node23 [
    style = "dotted"
  ];

  node13 [
    label = "A <- ; . a B"
  ];

  node13 -> node14 [
    label = "(a): shift"
  ];

  node14 [
    label = "A <- ; a . B"
  ];

  node14 -> node15_joint [
    label = "(b): with backpoint",
    arrowhead = "none"
  ];

  node15_joint [
    shape = "none",
    label = "",
    width = 0,
    height = 0
  ];

  node15_joint -> node15_enter_joint [
    label = "enter into B",
    arrowhead = "none"
  ];

  node15_joint -> node20 [
    label = "(b): shift",
    style = "dashed"
  ];

  node15_enter_joint [
    shape = "none",
    label = "",
    width = 0,
    height = 0
  ];

  node15_enter_joint -> node15;

  node15_enter_joint -> node21 [
    style = "dotted"
  ];

  node15 [
    label = "B <- ; . b A"
  ];

  node15 -> node16 [
    label = "(b): shift"
  ];

  node16 [
    label = "B <- ; b . A"
  ];

  node16 -> node16_13_joint [
    label = "(a): with backpoint",
    arrowhead = "none"
  ];

  node16_13_joint [
    shape = "none",
    label = "",
    width = 0,
    height = 0
  ];

  node16_13_joint -> node16_13_enter_joint [
    label = "enter into A",
    arrowhead = "none"
  ];

  node16_13_joint -> node18 [
    label = "(a): shift",
    style = "dashed"
  ];

  node16_13_enter_joint [
    shape = "none",
    label = "",
    width = 0,
    height = 0
  ];

  node16_13_enter_joint -> node13;

  node16_13_enter_joint -> node22 [
    style = "dotted"
  ];

  node18 [
    label = "A <- a ."
  ];

  node18 -> reduced [
    label = "(-): reduce"
  ];

  node20 [
    label = "B <- b ."
  ];

  node20 -> reduced [
    label = "(-): reduce"
  ];

  node21 [
    label = "A <- ; a B ."
  ];

  node21 -> reduced [
    label = "(-): reduce"
  ];

  node22 [
    label = "B <- ; b A ."
  ];

  node22 -> reduced [
    label = "(-): reduce"
  ];

  node23 [
    label = "E <- C A ."
  ];

  node23 -> reduced [
    label = "(-): reduce"
  ];
}
